{"version":3,"sources":["components/Header.jsx","components/artist/views/ArtistCard.jsx","utils/AppDispatcher.js","utils/ActionTypes.js","components/artist/ArtistActionCreators.js","components/artist/ArtistWebAPIUtils.js","components/artist/ArtistStore.js","components/artist/views/ArtistCardList.jsx","components/album/AlbumActionCreators.js","components/album/AlbumListLoading.jsx","components/album/AlbumCard.jsx","components/album/AlbumList.jsx","components/album/AlbumWebAPIUtils.js","components/album/AlbumStore.js","components/album/AlbumCardList.jsx","components/Content.jsx","components/Search.jsx","App.jsx","index.js"],"names":["PrimarySearchAppBar","classes","useStyles","className","grow","AppBar","position","Toolbar","Typography","title","variant","noWrap","makeStyles","theme","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","ArtistCard","props","strArtistThumb","strArtist","React","useState","open","setOpen","handleClose","Card","style","card","CardActionArea","onClick","CardMedia","component","alt","image","CardContent","Dialog","fullScreen","onClose","TransitionComponent","Transition","appBar","IconButton","edge","aria-label","flex","forwardRef","ref","Slide","direction","AppDispatcher","Dispatcher","ActionTypes","GET_ARTIST_LIST","ARTIST_LIST_SUCCESS","ARTIST_LIST_FAIURE","GET_ARTIST_DETAILS","ARTIST_DETAILS_SUCCESS","ARTIST_DETAILS_FAILURE","GET_ALBUM_LIST","ALBUM_LIST_SUCCESS","ALBUM_LIST_FAIURE","GET_ALBUM_DETAILS","ALBUM_DETAILS_SUCCESS","ALBUM_DETAILS_FAILURE","ArtistActionCreators","getArtistList","searchText","dispatch","type","successArtistList","data","failureArtistList","error","ARTIST_LIST_FAILURE","getArtistDetails","successArtistDetails","failureArtistDetails","ArtistWebAPIUtils","getArtistLists","undefined","uri","concat","$","ajax","url","success","artists","details","ArtistStore","assign","EventEmitter","prototype","emitChange","this","emit","addChangeListener","callback","on","removeChangeListener","removeListener","dispatchToken","register","action","getStateFromStore","artistList","ArtistCardList","state","onChange","bind","setState","root","GridList","gridList","map","tile","GridListTile","gridListTile","Component","flexWrap","overflow","marginTop","transform","titleBar","background","AlbumActionCreators","getAlbumList","successAlbumList","failureAlbumList","ALBUM_LIST_FAILURE","getAlbumDetails","successAlbumDetails","failureAlbumDetails","backdrop","zIndex","drawer","AlbumListLoading","Backdrop","CircularProgress","AlbumCard","strAlbumThumb","strAlbum","AlbumList","albumList","key","idAlbum","AlbumWebAPIUtils","getAlbumLists","album","albums","isLoading","AlbumStore","setIsLoading","val","getIsLoading","getStateFromAlbumStore","AlbumCardList","onAlbumChange","Content","searchResults","Search","onKeyPressEnter","event","target","value","onInputChange","keyCode","which","preventDefault","InputGroup","FormControl","placeholder","aria-describedby","e","onKeyPress","Append","Button","App","handleChange","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72104ef1.chunk.js","sourcesContent":["import React from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n\t\t\t\t\t\tMusic Search App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  }\n}))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\n\nimport './artist.css'\n\nfunction ArtistCard(props) {\n  const { strArtistThumb, strArtist } = props\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  function handleClickOpen() {\n    setOpen(true)\n  }\n\n  function handleClose() {\n    setOpen(false)\n  }\n  return (\n    <div>\n      <Card style={useStyles.card}>\n        <CardActionArea onClick={handleClickOpen} style={{ padding: '5px' }}>\n          <CardMedia\n            className=\"artist-card__media\"\n            component=\"img\"\n            alt={strArtist}\n            image={strArtistThumb}\n            title={strArtist}\n          />\n          <CardContent style={{ padding: '0' }}>\n            <Typography variant=\"subtitle1\">{strArtist}</Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {strArtist}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Dialog>\n    </div>\n  )\n}\nexport default ArtistCard\n\nArtistCard.propTypes = {\n  strArtist: PropTypes.string.isRequired,\n  strArtistThumb: PropTypes.string.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n","import { Dispatcher } from 'flux'\n\nconst AppDispatcher = new Dispatcher()\n\nexport default AppDispatcher\n","const ActionTypes = {\n  GET_ARTIST_LIST: 'GET_ARTIST_LIST',\n  ARTIST_LIST_SUCCESS: 'ARTIST_LIST_SUCCESS',\n  ARTIST_LIST_FAIURE: 'ARTIST_LIST_FAIURE',\n  GET_ARTIST_DETAILS: 'GET_ARTIST_DETAILS',\n  ARTIST_DETAILS_SUCCESS: 'ARTIST_DETAILS_SUCCESS',\n  ARTIST_DETAILS_FAILURE: 'ARTIST_DETAILS_FAILURE',\n  GET_ALBUM_LIST: 'GET_ALBUM_LIST',\n  ALBUM_LIST_SUCCESS: 'ALBUM_LIST_SUCCESS',\n  ALBUM_LIST_FAIURE: 'ALBUM_LIST_FAIURE',\n  GET_ALBUM_DETAILS: 'GET_ALBUM_DETAILS',\n  ALBUM_DETAILS_SUCCESS: 'ALBUM_DETAILS_SUCCESS',\n  ALBUM_DETAILS_FAILURE: 'ALBUM_DETAILS_FAILURE',\n\n}\n\nexport default ActionTypes\n","import AppDispatcher from '../../utils/AppDispatcher'\nimport ActionTypes from '../../utils/ActionTypes'\n\nconst ArtistActionCreators = {\n  getArtistList(searchText) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.GET_ARTIST_LIST,\n      searchText, // Queen\n    })\n  },\n\n  successArtistList(data) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ARTIST_LIST_SUCCESS,\n      data, // SUCCESS\n    })\n  },\n\n  failureArtistList(error) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ARTIST_LIST_FAILURE,\n      error, // FAILURE\n    })\n  },\n\n  getArtistDetails(searchText) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.GET_ARTIST_DETAILS,\n      searchText, // Sting\n    })\n  },\n  successArtistDetails(data) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ARTIST_DETAILS_SUCCESS,\n      data, // SUCCESS\n    })\n  },\n\n  failureArtistDetails(error) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ARTIST_DETAILS_FAILURE,\n      error, // FAILURE\n    })\n  },\n\n}\n\nexport default ArtistActionCreators\n","import $ from 'jquery'\nimport ArtistActionCreators from './ArtistActionCreators'\n\nconst ArtistWebAPIUtils = {\n  getArtistLists(searchText) {\n    if (searchText === '' || searchText === undefined) searchText = 'Queen'\n    const uri = 'https://www.theaudiodb.com/api/v1/json/1/search.php?s='.concat(searchText)\n\n    $.ajax({\n      url: uri,\n      type: 'GET',\n\n      success(data) {\n        // console.log(data.artists)\n        ArtistActionCreators.successArtistList(data.artists)\n      },\n\n      error() {\n        ArtistActionCreators.failureArtistList('FAILURE_SORRY')\n      },\n    })\n  },\n\n  getArtistDetails(searchText) {\n    const uri = 'movies_list/'.concat(searchText === '' ? 'star' : searchText)\n\n    $.ajax({\n      url: uri,\n      type: 'GET',\n\n      success(data) {\n        ArtistActionCreators.successArtistDetails('SUCCESS_DETAIL_DATA')\n      },\n\n      error() {\n        ArtistActionCreators.failureArtistDetails('FAILURE_DETAIL_SORRY')\n      },\n    })\n  },\n}\n\nexport default ArtistWebAPIUtils\n","\nimport { EventEmitter } from 'events'\nimport assign from 'object-assign'\n\nimport ArtistWebAPIUtils from './ArtistWebAPIUtils'\nimport AppDispatcher from '../../utils/AppDispatcher'\nimport ActionTypes from '../../utils/ActionTypes'\n// import ArtistActionCreators from './ArtistActionCreators'\n\n\nconst CHANGE_EVENT = 'change'\n\n// Store instances/variables\nlet artists = []\nlet details = []\n\nconst ArtistStore = assign({}, EventEmitter.prototype, {\n  // Public functions the views can see\n\n  emitChange() {\n    this.emit(CHANGE_EVENT)\n  },\n\n\n  // View can subscribe to store events\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback)\n  },\n\n  // View can un-subscribe to store events\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback)\n  },\n\n  // View can retrieve specific values that store manages\n  getArtistList() {\n    return artists\n  },\n\n  getArtistDetails() {\n    return details\n  },\n\n})\n\nArtistStore.dispatchToken = AppDispatcher.register((action) => {\n  switch (action.type) {\n  case ActionTypes.GET_ARTIST_LIST:\n    // console.log(`Store invoked ${action}`)\n    // Take action - Make API call and update state\n    ArtistWebAPIUtils.getArtistLists(action.searchText)\n    ArtistStore.emitChange()\n    break\n  case ActionTypes.ARTIST_LIST_SUCCESS:\n    artists = action.data // update store instance\n    ArtistStore.emitChange()\n    break\n  case ActionTypes.ARTIST_LIST_FAILURE:\n    artists = action.error // update store instance\n    ArtistStore.emitChange()\n    break\n  case ActionTypes.GET_ARTIST_DETAILS:\n    // Take action - Make API call and update state\n    ArtistWebAPIUtils.getArtistDetails(action.searchText)\n    ArtistStore.emitChange()\n    break\n  case ActionTypes.ARTIST_DETAILS_SUCCESS:\n    details = action.data // update store instance\n    ArtistStore.emitChange()\n    break\n  case ActionTypes.ARTIST_DETAILS_FAILURE:\n    details = action.error // update store instance\n    ArtistStore.emitChange()\n    break\n  default:\n    // do nothing\n  }\n})\n\nexport default ArtistStore\n","import React, { Component } from 'react'\nimport { GridList, GridListTile } from '@material-ui/core'\nimport ArtistCard from './ArtistCard'\nimport ArtistActionCreators from '../ArtistActionCreators'\n\nimport ArtistStore from '../ArtistStore'\n\n// Private function that gets values from store\nfunction getStateFromStore() {\n  return {\n    artistList: ArtistStore.getArtistList()\n  }\n}\n\nexport default class ArtistCardList extends Component {\n  constructor(props) {\n    super(props)\n\n    // Set view's state based on store data\n    this.state = getStateFromStore()\n    this.onChange = this.onChange.bind(this)\n  }\n\n  // Subscribe to store events on mount\n  componentDidMount() {\n    ArtistActionCreators.getArtistList('')\n    ArtistStore.addChangeListener(this.onChange)\n  }\n\n  // Un-Subscribe to store events on un-mount\n  componentWillUnmount() {\n    ArtistStore.removeChangeListener(this.onChange)\n  }\n\n  // Store uses this as callback fn when store is updated\n  onChange() {\n    this.setState(getStateFromStore())\n  }\n\n  render() {\n    const { artistList } = this.state\n\n    if (artistList) {\n      return (\n        <div style={useStyles.root}>\n          <GridList style={useStyles.gridList}>\n            {/* {console.log(this.state.artistList)} */}\n            {artistList.map(tile => (\n              // TODO: Add map key\n              <GridListTile style={useStyles.gridListTile}>\n                <ArtistCard\n                  strArtist={tile.strArtist}\n                  strArtistThumb={tile.strArtistThumb}\n                />\n\n              </GridListTile>\n            ))}\n          </GridList>\n\n        </div>\n      )\n    } else {\n      // TODO: Error handling\n      return (\n        <h1>Not Found</h1>\n      )\n    }\n  }\n}\n\nconst useStyles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflow: 'hidden',\n    marginTop: '20px',\n    padding: '20px',\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  },\n  gridListTile: {\n    width: '160px'\n  }\n}\n","import AppDispatcher from '../../utils/AppDispatcher'\nimport ActionTypes from '../../utils/ActionTypes'\n\nconst AlbumActionCreators = {\n  getAlbumList(searchText) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.GET_ALBUM_LIST,\n      searchText, // Coldplay\n    })\n  },\n\n  successAlbumList(data) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ALBUM_LIST_SUCCESS,\n      data, // SUCCESS\n    })\n  },\n\n  failureAlbumList(error) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ALBUM_LIST_FAILURE,\n      error, // FAILURE\n    })\n  },\n\n  getAlbumDetails(searchText) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.GET_ALBUM_DETAILS,\n      searchText, // Sting\n    })\n  },\n  successAlbumDetails(data) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ALBUM_DETAILS_SUCCESS,\n      data, // SUCCESS\n    })\n  },\n\n  failureAlbumDetails(error) {\n    AppDispatcher.dispatch({\n      type: ActionTypes.ALBUM_DETAILS_FAILURE,\n      error, // FAILURE\n    })\n  },\n\n}\n\nexport default AlbumActionCreators\n","import React from 'react'\nimport { Backdrop, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nfunction AlbumListLoading() {\n  const classes = useStyles();\n\n  return (\n    <Backdrop\n      className={classes.backdrop}\n      open\n    >\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  )\n}\n\nexport default AlbumListLoading\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\n\n\nfunction AlbumCard (props) {\n  const {strAlbumThumb, strAlbum,} = props\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n  \n  function handleClickOpen() {\n    setOpen(true)\n  }\n  \n  function handleClose() {\n    setOpen(false)\n  }\n  return (\n    <div>\n      <Card style={useStyles.card}>\n        <CardActionArea \n          onClick={handleClickOpen}\n          style={{ padding: '5px' }}\n        >\n          <CardMedia\n            className=\"album-card__media\"\n            component=\"img\"\n            alt={strAlbum}\n            image={strAlbumThumb}\n            title={strAlbum}\n          />\n          <CardContent style={{ padding: '0' }}>\n            <Typography variant=\"subtitle1\">\n              {strAlbum}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n\n      <Dialog \n        fullScreen\n        open={open} \n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {strAlbum}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Dialog>\n  \n    </div>\n  )\n}\nexport default  AlbumCard \n\nAlbumCard.propTypes = {\n  strAlbum: PropTypes.string.isRequired,\n  strAlbumThumb: PropTypes.string.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})","import React from 'react'\nimport { GridList, GridListTile } from '@material-ui/core'\nimport AlbumCard from './AlbumCard'\n\n\nfunction AlbumList(props) {\n  const { albumList } = props\n  if (albumList) {\n    return (\n      <div style={useStyles.root}>\n        <GridList style={useStyles.gridList}>\n          {albumList.map(tile => (\n            // TODO: Add map key\n            <GridListTile\n              style={useStyles.gridListTile}\n              key={tile.idAlbum}\n            >\n              <AlbumCard\n                strAlbum={tile.strAlbum}\n                strAlbumThumb={tile.strAlbumThumb}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    )\n  } else {\n    // TODO: Error handling\n    return (\n      <h1>Not Found</h1>\n    )\n  }\n}\n\n\n\nconst useStyles = {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflow: 'hidden',\n    marginTop: '20px',\n    padding: '20px',\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  },\n  gridListTile: {\n    width: '160px'\n  }\n}\n\nexport default AlbumList\n\n","import $ from 'jquery'\nimport AlbumActionCreators from './AlbumActionCreators'\n\nconst AlbumWebAPIUtils = {\n  getAlbumLists(searchText) {\n    if (searchText === '' || searchText === undefined) searchText = 'Queen'\n    const uri = 'https://theaudiodb.com/api/v1/json/1/searchalbum.php?s='.concat(searchText)\n\n    $.ajax({\n      url: uri,\n      type: 'GET',\n\n      success(data) {\n        AlbumActionCreators.successAlbumList(data.album)\n      },\n\n      error() {\n        AlbumActionCreators.failureAlbumList('FAILURE_SORRY')\n      },\n    })\n  },\n\n  getAlbumDetails(searchText) {\n    const uri = 'movies_list/'.concat(searchText === '' ? 'star' : searchText)\n\n    $.ajax({\n      url: uri,\n      type: 'GET',\n\n      success(data) {\n        AlbumActionCreators.successAlbumDetails('SUCCESS_DETAIL_DATA')\n      },\n\n      error() {\n        AlbumActionCreators.failureAlbumDetails('FAILURE_DETAIL_SORRY')\n      },\n    })\n  },\n}\n\nexport default AlbumWebAPIUtils\n","\nimport { EventEmitter } from 'events'\nimport assign from 'object-assign'\n\nimport AlbumWebAPIUtils from './AlbumWebAPIUtils'\nimport AppDispatcher from '../../utils/AppDispatcher'\nimport ActionTypes from '../../utils/ActionTypes'\n\n\nconst CHANGE_EVENT = 'change'\n\n// Store instances/variables\nlet albums = []\nlet details = []\nlet isLoading = false\n\nconst AlbumStore = assign({}, EventEmitter.prototype, {\n  // Public functions the views can see\n\n  emitChange() {\n    this.emit(CHANGE_EVENT)\n  },\n\n\n  // View can subscribe to store events\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback)\n  },\n\n  // View can un-subscribe to store events\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback)\n  },\n\n  // View can retrieve specific values that store manages\n  getAlbumList() {\n    return albums\n  },\n\n  getAlbumDetails() {\n    return details\n  },\n  setIsLoading (val){\n    isLoading = val\n  },\n  getIsLoading() {\n    return isLoading\n  },\n\n})\n\nAlbumStore.dispatchToken = AppDispatcher.register((action) => {\n  switch (action.type) {\n  case ActionTypes.GET_ALBUM_LIST:\n    // console.log(`Store invoked ${action}`)\n    // Take action - Make API call and update state\n    AlbumWebAPIUtils.getAlbumLists(action.searchText)\n    AlbumStore.setIsLoading (true)\n    AlbumStore.emitChange()\n    break\n  case ActionTypes.ALBUM_LIST_SUCCESS:\n    albums = action.data // update store instance\n    AlbumStore.setIsLoading (false)\n    AlbumStore.emitChange()\n    break\n  case ActionTypes.ALBUM_LIST_FAILURE:\n    albums = action.error // update store instance\n    AlbumStore.setIsLoading (false)\n    AlbumStore.emitChange()\n    break\n  case ActionTypes.GET_ALBUM_DETAILS:\n    // Take action - Make API call and update state\n    AlbumWebAPIUtils.getAlbumDetails(action.searchText)\n    AlbumStore.setIsLoading (true)\n    AlbumStore.emitChange()\n    break\n  case ActionTypes.ALBUM_DETAILS_SUCCESS:\n    details = action.data // update store instance\n    AlbumStore.setIsLoading (false)\n    AlbumStore.emitChange()\n    break\n  case ActionTypes.ALBUM_DETAILS_FAILURE:\n    details = action.error // update store instance\n    AlbumStore.setIsLoading (false)\n    AlbumStore.emitChange()\n    break\n  default:\n    // do nothing\n  }\n})\n\nexport default AlbumStore\n","import React, { Component } from 'react'\n// import { GridList, GridListTile } from '@material-ui/core'\nimport AlbumActionCreators from './AlbumActionCreators'\n// import AlbumCard from './AlbumCard'\nimport AlbumListLoading from './AlbumListLoading'\nimport AlbumList from './AlbumList'\nimport AlbumStore from './AlbumStore'\n\n// Private function that gets values from store\nfunction getStateFromAlbumStore() {\n  // console.log('AlbumCardList ' + this.state.albumList)\n  return {\n    albumList: AlbumStore.getAlbumList(),\n    isLoading: AlbumStore.getIsLoading()\n  }\n}\n\nexport default class AlbumCardList extends Component {\n  constructor(props) {\n    super(props)\n\n    // Set view's state based on store data\n    this.state = getStateFromAlbumStore()\n    this.onAlbumChange = this.onAlbumChange.bind(this)\n  }\n\n  // Subscribe to store events on mount\n  componentDidMount() {\n    AlbumActionCreators.getAlbumList('')\n    AlbumStore.addChangeListener(this.onAlbumChange)\n  }\n\n  // Un-Subscribe to store events on un-mount\n  componentWillUnmount() {\n    AlbumStore.removeChangeListener(this.onAlbumChange)\n  }\n\n  // Store uses this as callback fn when store is updated\n  onAlbumChange() {\n    this.setState(getStateFromAlbumStore())\n  }\n\n  render() {\n    const { albumList } = this.state\n    const { isLoading } = this.state\n\n    return (\n      <div>\n        {isLoading\n          ? <AlbumListLoading />\n          : <AlbumList albumList={albumList} />\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ArtistCardList from './artist/views/ArtistCardList'\n// import ArtistCardDetail from './artist/ArtistCardDetail'\nimport AlbumCardList from './album/AlbumCardList'\nimport './css/Content.css'\n\nconst Content = props => {\n  const searchResults = props.searchText\n    ? `Searching for ${props.searchText}`\n    : null\n\n  return (\n    <div>\n      {searchResults}\n      <h3 className='List-Label'>Artists</h3>\n      <ArtistCardList />\n      <h3 className='List-Label'>Albums</h3>\n      <AlbumCardList />\n      {/* <ArtistCardDetail /> */}\n    </div>\n  )\n}\n\nexport default Content\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n// import Dropdown from 'react-bootstrap/Dropdown'\n// import DropdownButton from 'react-bootstrap/DropdownButton'\n\n\nclass Search extends Component {\n  constructor(props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.onKeyPressEnter = this.onKeyPressEnter.bind(this)\n    this.state = {\n      searchText: ''\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      searchText: event.target.value\n    })\n  }\n\n  onKeyPressEnter(event) {\n    const { searchText } = this.state\n    const { onInputChange } = this.props\n\n    if (event.keyCode === 13 || event.which === 13) {\n      event.preventDefault() // Ensure it is only this code that run\n      onInputChange(searchText)\n    }\n  }\n\n  ;\n\n  render() {\n    const { searchText } = this.state\n    const { onInputChange } = this.props\n\n    return (\n      <div className=\"artist-card__margin\">\n        <div>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"Search Artists, Albums or Tracks...\"\n              aria-label=\"Search Artists, Albums or Tracks...\"\n              aria-describedby=\"basic-addon2\"\n              onChange={e => {\n                this.onChange(e)\n              }}\n              onKeyPress={e => {\n                this.onKeyPressEnter(e)\n              }}\n            />\n\n            {/* <DropdownButton\n              as={InputGroup.Append}\n              variant=\"outline-secondary\"\n              title=\"Filter\"\n              id=\"input-group-dropdown-2\"\n            >\n              <Dropdown.Item\n                onClick={() => {\n                  console.log('All selected')\n                }}\n                active\n              >\n                All\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  console.log('Artists selected')\n                }}\n              >\n                Artists\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  console.log('Albums selected')\n                }}\n              >\n                Albums\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  console.log('Tracks selected')\n                }}\n              >\n                Tracks\n              </Dropdown.Item>\n            </DropdownButton> */}\n\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                onClick={() => {\n                  onInputChange(searchText)\n                }}\n              >\n                Search\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport Content from './components/Content'\nimport Search from './components/Search'\nimport ArtistActionCreators from './components/artist/ArtistActionCreators'\nimport AlbumActionCreators from './components/album/AlbumActionCreators'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      searchText: ''\n    }\n  }\n\n  handleChange(val) {\n    this.setState({ searchText: val })\n    ArtistActionCreators.getArtistList(val)\n    AlbumActionCreators.getAlbumList(val)\n\n  }\n\n\n  render() {\n    const { searchText } = this.state\n    return (\n      <div id=\"music-search-app\">\n        <Header />\n        <Search onInputChange={this.handleChange} />\n        <Content searchText={searchText} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}